<?xml version="1.0" encoding="UTF-8"?>
<testng-results skipped="0" failed="0" ignored="11" total="15" passed="4">
  <reporter-output>
    <line>
      <![CDATA[My OS version is Windows 10<br>]]>
    </line>
    <line>
      <![CDATA[this is an auto related test 0<br>]]>
    </line>
    <line>
      <![CDATA[My OS version is Windows 10<br>]]>
    </line>
    <line>
      <![CDATA[Overlay Not Found<br>]]>
    </line>
    <line>
      <![CDATA[src,Arrtibut Present in [[ChromeDriver: chrome on WINDOWS (6ecdd8bd110d42a1f5beba8bf0ec7aa3)] -> xpath: (//a[contains(.,'Home')])[2]/span/img]<br>]]>
    </line>
    <line>
      <![CDATA[[[ChromeDriver: chrome on WINDOWS (6ecdd8bd110d42a1f5beba8bf0ec7aa3)] -> xpath: (//a[contains(.,'Home')])[2]] clicked<br>]]>
    </line>
    <line>
      <![CDATA[Actual value : Enter ZIP Code >>><<< Expected value : Enter ZIP Code<br>]]>
    </line>
    <line>
      <![CDATA[[[ChromeDriver: chrome on WINDOWS (6ecdd8bd110d42a1f5beba8bf0ec7aa3)] -> xpath: //input[@id='zipCode_overlay' and @name='ZipCode']] Text Value entered : 11411<br>]]>
    </line>
    <line>
      <![CDATA[[[ChromeDriver: chrome on WINDOWS (6ecdd8bd110d42a1f5beba8bf0ec7aa3)] -> id: qsButton_overlay] clicked<br>]]>
    </line>
    <line>
      <![CDATA[My OS version is Windows 10<br>]]>
    </line>
    <line>
      <![CDATA[My OS version is Windows 10<br>]]>
    </line>
  </reporter-output>
  <suite name="SmokeSuite" duration-ms="34043" started-at="2022-02-12T00:11:57 EST" finished-at="2022-02-12T00:12:31 EST">
    <groups>
      <group name="home">
        <method signature="HomeQuoteTest.homeQuoteTesting()[pri:0, instance:progressive.qa.home.HomeQuoteTest@1445d7f]" name="homeQuoteTesting" class="progressive.qa.home.HomeQuoteTest"/>
      </group> <!-- home -->
    </groups>
    <test name="smoke" duration-ms="34043" started-at="2022-02-12T00:11:57 EST" finished-at="2022-02-12T00:12:31 EST">
      <class name="progressive.qa.home.HomeQuoteTest">
        <test-method status="PASS" signature="beforeEacchTest(java.lang.reflect.Method,[Ljava.lang.Object;)[pri:0, instance:progressive.qa.home.HomeQuoteTest@1445d7f]" name="beforeEacchTest" is-config="true" duration-ms="1" started-at="2022-02-12T00:12:03 EST" finished-at="2022-02-12T00:12:03 EST">
          <params>
            <param index="0">
              <value>
                <![CDATA[public void progressive.qa.home.HomeQuoteTest.homeQuoteTesting()]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[[Ljava.lang.Object;@41294371]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- beforeEacchTest -->
        <test-method status="PASS" signature="setUp(java.lang.String)[pri:0, instance:progressive.qa.home.HomeQuoteTest@1445d7f]" name="setUp" is-config="true" duration-ms="3293" started-at="2022-02-12T00:12:03 EST" finished-at="2022-02-12T00:12:06 EST">
          <params>
            <param index="0">
              <value>
                <![CDATA[mybrowser]]>
              </value>
            </param>
          </params>
          <reporter-output>
            <line>
              <![CDATA[My OS version is Windows 10<br>]]>
            </line>
          </reporter-output>
        </test-method> <!-- setUp -->
        <test-method status="PASS" signature="homeQuoteTesting()[pri:0, instance:progressive.qa.home.HomeQuoteTest@1445d7f]" name="homeQuoteTesting" duration-ms="15705" started-at="2022-02-12T00:12:06 EST" finished-at="2022-02-12T00:12:22 EST">
          <reporter-output>
            <line>
              <![CDATA[Overlay Not Found<br>]]>
            </line>
            <line>
              <![CDATA[src,Arrtibut Present in [[ChromeDriver: chrome on WINDOWS (6ecdd8bd110d42a1f5beba8bf0ec7aa3)] -> xpath: (//a[contains(.,'Home')])[2]/span/img]<br>]]>
            </line>
            <line>
              <![CDATA[[[ChromeDriver: chrome on WINDOWS (6ecdd8bd110d42a1f5beba8bf0ec7aa3)] -> xpath: (//a[contains(.,'Home')])[2]] clicked<br>]]>
            </line>
            <line>
              <![CDATA[Actual value : Enter ZIP Code >>><<< Expected value : Enter ZIP Code<br>]]>
            </line>
            <line>
              <![CDATA[[[ChromeDriver: chrome on WINDOWS (6ecdd8bd110d42a1f5beba8bf0ec7aa3)] -> xpath: //input[@id='zipCode_overlay' and @name='ZipCode']] Text Value entered : 11411<br>]]>
            </line>
            <line>
              <![CDATA[[[ChromeDriver: chrome on WINDOWS (6ecdd8bd110d42a1f5beba8bf0ec7aa3)] -> id: qsButton_overlay] clicked<br>]]>
            </line>
          </reporter-output>
        </test-method> <!-- homeQuoteTesting -->
        <test-method status="PASS" signature="afterEachTest(org.testng.ITestResult)[pri:0, instance:progressive.qa.home.HomeQuoteTest@1445d7f]" name="afterEachTest" is-config="true" duration-ms="0" started-at="2022-02-12T00:12:22 EST" finished-at="2022-02-12T00:12:22 EST">
          <params>
            <param index="0">
              <value>
                <![CDATA[[TestResult name=homeQuoteTesting status=SUCCESS method=HomeQuoteTest.homeQuoteTesting()[pri:0, instance:progressive.qa.home.HomeQuoteTest@1445d7f] output=Overlay Not Found<br>]]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- afterEachTest -->
        <test-method status="PASS" signature="quttingBrowser()[pri:0, instance:progressive.qa.home.HomeQuoteTest@1445d7f]" name="quttingBrowser" is-config="true" duration-ms="715" started-at="2022-02-12T00:12:22 EST" finished-at="2022-02-12T00:12:23 EST">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- quttingBrowser -->
      </class> <!-- progressive.qa.home.HomeQuoteTest -->
      <class name="progressive.qa.auto.AutoQuoteWithExtentReport">
        <test-method status="PASS" signature="extentSetup()[pri:0, instance:progressive.qa.auto.AutoQuoteWithExtentReport@6a396c1e]" name="extentSetup" is-config="true" duration-ms="2" started-at="2022-02-12T00:12:23 EST" finished-at="2022-02-12T00:12:23 EST">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- extentSetup -->
        <test-method status="PASS" signature="beforeEacchTest(java.lang.reflect.Method,[Ljava.lang.Object;)[pri:0, instance:progressive.qa.auto.AutoQuoteWithExtentReport@6a396c1e]" name="beforeEacchTest" is-config="true" duration-ms="1" started-at="2022-02-12T00:12:23 EST" finished-at="2022-02-12T00:12:23 EST">
          <params>
            <param index="0">
              <value>
                <![CDATA[public void progressive.qa.auto.AutoQuoteWithExtentReport.test1()]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[[Ljava.lang.Object;@4996c99]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- beforeEacchTest -->
        <test-method status="PASS" signature="setUp(java.lang.String)[pri:0, instance:progressive.qa.auto.AutoQuoteWithExtentReport@6a396c1e]" name="setUp" is-config="true" duration-ms="3303" started-at="2022-02-12T00:12:23 EST" finished-at="2022-02-12T00:12:26 EST">
          <params>
            <param index="0">
              <value>
                <![CDATA[mybrowser]]>
              </value>
            </param>
          </params>
          <reporter-output>
            <line>
              <![CDATA[My OS version is Windows 10<br>]]>
            </line>
          </reporter-output>
        </test-method> <!-- setUp -->
        <test-method status="PASS" signature="test1()[pri:0, instance:progressive.qa.auto.AutoQuoteWithExtentReport@6a396c1e]" name="test1" duration-ms="1" started-at="2022-02-12T00:12:26 EST" finished-at="2022-02-12T00:12:26 EST">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- test1 -->
        <test-method status="PASS" signature="quttingBrowser()[pri:0, instance:progressive.qa.auto.AutoQuoteWithExtentReport@6a396c1e]" name="quttingBrowser" is-config="true" duration-ms="664" started-at="2022-02-12T00:12:26 EST" finished-at="2022-02-12T00:12:27 EST">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- quttingBrowser -->
        <test-method status="PASS" signature="afterEachTest(org.testng.ITestResult)[pri:0, instance:progressive.qa.auto.AutoQuoteWithExtentReport@6a396c1e]" name="afterEachTest" is-config="true" duration-ms="0" started-at="2022-02-12T00:12:26 EST" finished-at="2022-02-12T00:12:26 EST">
          <params>
            <param index="0">
              <value>
                <![CDATA[[TestResult name=test1 status=SUCCESS method=AutoQuoteWithExtentReport.test1()[pri:0, instance:progressive.qa.auto.AutoQuoteWithExtentReport@6a396c1e] output={null}]]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- afterEachTest -->
        <test-method status="PASS" signature="beforeEacchTest(java.lang.reflect.Method,[Ljava.lang.Object;)[pri:0, instance:progressive.qa.auto.AutoQuoteWithExtentReport@6a396c1e]" name="beforeEacchTest" is-config="true" duration-ms="2" started-at="2022-02-12T00:12:27 EST" finished-at="2022-02-12T00:12:27 EST">
          <params>
            <param index="0">
              <value>
                <![CDATA[public void progressive.qa.auto.AutoQuoteWithExtentReport.test2()]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[[Ljava.lang.Object;@1b956cfa]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- beforeEacchTest -->
        <test-method status="PASS" signature="setUp(java.lang.String)[pri:0, instance:progressive.qa.auto.AutoQuoteWithExtentReport@6a396c1e]" name="setUp" is-config="true" duration-ms="3116" started-at="2022-02-12T00:12:27 EST" finished-at="2022-02-12T00:12:30 EST">
          <params>
            <param index="0">
              <value>
                <![CDATA[mybrowser]]>
              </value>
            </param>
          </params>
          <reporter-output>
            <line>
              <![CDATA[My OS version is Windows 10<br>]]>
            </line>
          </reporter-output>
        </test-method> <!-- setUp -->
        <test-method status="PASS" signature="test2()[pri:0, instance:progressive.qa.auto.AutoQuoteWithExtentReport@6a396c1e]" name="test2" duration-ms="2" started-at="2022-02-12T00:12:30 EST" finished-at="2022-02-12T00:12:30 EST">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- test2 -->
        <test-method status="PASS" signature="afterEachTest(org.testng.ITestResult)[pri:0, instance:progressive.qa.auto.AutoQuoteWithExtentReport@6a396c1e]" name="afterEachTest" is-config="true" duration-ms="1" started-at="2022-02-12T00:12:30 EST" finished-at="2022-02-12T00:12:30 EST">
          <params>
            <param index="0">
              <value>
                <![CDATA[[TestResult name=test2 status=SUCCESS method=AutoQuoteWithExtentReport.test2()[pri:0, instance:progressive.qa.auto.AutoQuoteWithExtentReport@6a396c1e] output={null}]]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- afterEachTest -->
        <test-method status="PASS" signature="quttingBrowser()[pri:0, instance:progressive.qa.auto.AutoQuoteWithExtentReport@6a396c1e]" name="quttingBrowser" is-config="true" duration-ms="669" started-at="2022-02-12T00:12:30 EST" finished-at="2022-02-12T00:12:30 EST">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- quttingBrowser -->
        <test-method status="PASS" signature="finishReport()[pri:0, instance:progressive.qa.auto.AutoQuoteWithExtentReport@6a396c1e]" name="finishReport" is-config="true" duration-ms="304" started-at="2022-02-12T00:12:30 EST" finished-at="2022-02-12T00:12:31 EST">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- finishReport -->
      </class> <!-- progressive.qa.auto.AutoQuoteWithExtentReport -->
      <class name="progressive.qa.auto.AutoQuoteTest">
        <test-method status="PASS" signature="initiatinExtentReport()[pri:0, instance:progressive.qa.auto.AutoQuoteTest@3444d69d]" name="initiatinExtentReport" is-config="true" duration-ms="260" started-at="2022-02-12T00:11:56 EST" finished-at="2022-02-12T00:11:57 EST">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- initiatinExtentReport -->
        <test-method status="PASS" signature="beforeEacchTest(java.lang.reflect.Method,[Ljava.lang.Object;)[pri:0, instance:progressive.qa.auto.AutoQuoteTest@3444d69d]" name="beforeEacchTest" is-config="true" duration-ms="11" started-at="2022-02-12T00:11:57 EST" finished-at="2022-02-12T00:11:57 EST">
          <params>
            <param index="0">
              <value>
                <![CDATA[public void progressive.qa.auto.AutoQuoteTest.testMethodAuto()]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[[Ljava.lang.Object;@315f09ef]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- beforeEacchTest -->
        <test-method status="PASS" signature="setUp(java.lang.String)[pri:0, instance:progressive.qa.auto.AutoQuoteTest@3444d69d]" name="setUp" is-config="true" duration-ms="5512" started-at="2022-02-12T00:11:57 EST" finished-at="2022-02-12T00:12:02 EST">
          <params>
            <param index="0">
              <value>
                <![CDATA[mybrowser]]>
              </value>
            </param>
          </params>
          <reporter-output>
            <line>
              <![CDATA[My OS version is Windows 10<br>]]>
            </line>
          </reporter-output>
        </test-method> <!-- setUp -->
        <test-method status="PASS" signature="testMethodAuto()[pri:0, instance:progressive.qa.auto.AutoQuoteTest@3444d69d]" name="testMethodAuto" duration-ms="4" started-at="2022-02-12T00:12:02 EST" depends-on-methods="progressive.qa.auto.AutoQuoteTest.autoQuoteTesting" finished-at="2022-02-12T00:12:02 EST">
          <reporter-output>
            <line>
              <![CDATA[this is an auto related test 0<br>]]>
            </line>
          </reporter-output>
        </test-method> <!-- testMethodAuto -->
        <test-method status="PASS" signature="afterEachTest(org.testng.ITestResult)[pri:0, instance:progressive.qa.auto.AutoQuoteTest@3444d69d]" name="afterEachTest" is-config="true" duration-ms="1" started-at="2022-02-12T00:12:02 EST" finished-at="2022-02-12T00:12:02 EST">
          <params>
            <param index="0">
              <value>
                <![CDATA[[TestResult name=testMethodAuto status=SUCCESS method=AutoQuoteTest.testMethodAuto()[pri:0, instance:progressive.qa.auto.AutoQuoteTest@3444d69d] output=this is an auto related test 0<br>]]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- afterEachTest -->
        <test-method status="PASS" signature="quttingBrowser()[pri:0, instance:progressive.qa.auto.AutoQuoteTest@3444d69d]" name="quttingBrowser" is-config="true" duration-ms="693" started-at="2022-02-12T00:12:02 EST" finished-at="2022-02-12T00:12:03 EST">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- quttingBrowser -->
        <test-method status="PASS" signature="endReport()[pri:0, instance:progressive.qa.auto.AutoQuoteTest@3444d69d]" name="endReport" is-config="true" duration-ms="108" started-at="2022-02-12T00:12:31 EST" finished-at="2022-02-12T00:12:31 EST">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- endReport -->
      </class> <!-- progressive.qa.auto.AutoQuoteTest -->
    </test> <!-- smoke -->
  </suite> <!-- SmokeSuite -->
</testng-results>
