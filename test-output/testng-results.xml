<?xml version="1.0" encoding="UTF-8"?>
<testng-results skipped="1" failed="0" ignored="5" total="7" passed="1">
  <reporter-output>
    <line>
      <![CDATA[My OS version is Windows 10<br>]]>
    </line>
    <line>
      <![CDATA[This is a home test<br>]]>
    </line>
  </reporter-output>
  <suite name="SmokeSuite" duration-ms="7148" started-at="2022-02-09T23:46:59 EST" finished-at="2022-02-09T23:47:07 EST">
    <groups>
      <group name="home">
        <method signature="HomeQuoteTest.homeTest()[pri:0, instance:progressive.qa.home.HomeQuoteTest@31206beb]" name="homeTest" class="progressive.qa.home.HomeQuoteTest"/>
      </group> <!-- home -->
    </groups>
    <test name="smoke" duration-ms="7148" started-at="2022-02-09T23:46:59 EST" finished-at="2022-02-09T23:47:07 EST">
      <class name="progressive.qa.home.HomeQuoteTest">
        <test-method status="PASS" signature="setUp(java.lang.String)[pri:0, instance:progressive.qa.home.HomeQuoteTest@31206beb]" name="setUp" is-config="true" duration-ms="5674" started-at="2022-02-09T23:47:00 EST" finished-at="2022-02-09T23:47:06 EST">
          <params>
            <param index="0">
              <value>
                <![CDATA[mybrowser]]>
              </value>
            </param>
          </params>
          <reporter-output>
            <line>
              <![CDATA[My OS version is Windows 10<br>]]>
            </line>
          </reporter-output>
        </test-method> <!-- setUp -->
        <test-method status="PASS" signature="homeTest()[pri:0, instance:progressive.qa.home.HomeQuoteTest@31206beb]" name="homeTest" duration-ms="2" started-at="2022-02-09T23:47:06 EST" finished-at="2022-02-09T23:47:06 EST">
          <reporter-output>
            <line>
              <![CDATA[This is a home test<br>]]>
            </line>
          </reporter-output>
        </test-method> <!-- homeTest -->
        <test-method status="PASS" signature="quttingBrowser()[pri:0, instance:progressive.qa.home.HomeQuoteTest@31206beb]" name="quttingBrowser" is-config="true" duration-ms="782" started-at="2022-02-09T23:47:06 EST" finished-at="2022-02-09T23:47:07 EST">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- quttingBrowser -->
      </class> <!-- progressive.qa.home.HomeQuoteTest -->
      <class name="progressive.qa.auto.AutoQuoteTest">
        <test-method status="SKIP" signature="autoQuoteTestingWithExcelDataProbider(java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String)[pri:0, instance:progressive.qa.auto.AutoQuoteTest@f4168b8]" name="autoQuoteTestingWithExcelDataProbider" duration-ms="0" started-at="2022-02-09T23:47:00 EST" data-provider="autoDataExcel" finished-at="2022-02-09T23:47:00 EST">
          <exception class="java.lang.RuntimeException">
            <message>
              <![CDATA[java.lang.IllegalStateException: Cannot get a STRING value from a NUMERIC cell]]>
            </message>
            <full-stacktrace>
              <![CDATA[java.lang.RuntimeException: java.lang.IllegalStateException: Cannot get a STRING value from a NUMERIC cell
at org.testng.internal.invokers.MethodInvocationHelper.invokeMethodNoCheckedException(MethodInvocationHelper.java:53)
at org.testng.internal.invokers.MethodInvocationHelper.invokeDataProvider(MethodInvocationHelper.java:153)
at org.testng.internal.Parameters.handleParameters(Parameters.java:767)
at org.testng.internal.Parameters.handleParameters(Parameters.java:704)
at org.testng.internal.invokers.ParameterHandler.handleParameters(ParameterHandler.java:70)
at org.testng.internal.invokers.ParameterHandler.createParameters(ParameterHandler.java:49)
at org.testng.internal.invokers.TestInvoker$MethodInvocationAgent.invoke(TestInvoker.java:904)
at org.testng.internal.invokers.TestInvoker.invokeTestMethods(TestInvoker.java:193)
at org.testng.internal.invokers.TestMethodWorker.invokeTestMethods(TestMethodWorker.java:146)
at org.testng.internal.invokers.TestMethodWorker.run(TestMethodWorker.java:128)
at java.util.ArrayList.forEach(ArrayList.java:1259)
at org.testng.TestRunner.privateRun(TestRunner.java:808)
at org.testng.TestRunner.run(TestRunner.java:603)
at org.testng.SuiteRunner.runTest(SuiteRunner.java:429)
at org.testng.SuiteRunner.runSequentially(SuiteRunner.java:423)
at org.testng.SuiteRunner.privateRun(SuiteRunner.java:383)
at org.testng.SuiteRunner.run(SuiteRunner.java:326)
at org.testng.SuiteRunnerWorker.runSuite(SuiteRunnerWorker.java:52)
at org.testng.SuiteRunnerWorker.run(SuiteRunnerWorker.java:95)
at org.testng.TestNG.runSuitesSequentially(TestNG.java:1249)
at org.testng.TestNG.runSuitesLocally(TestNG.java:1169)
at org.testng.TestNG.runSuites(TestNG.java:1092)
at org.testng.TestNG.run(TestNG.java:1060)
at org.testng.remote.AbstractRemoteTestNG.run(AbstractRemoteTestNG.java:115)
at org.testng.remote.RemoteTestNG.initAndRun(RemoteTestNG.java:251)
at org.testng.remote.RemoteTestNG.main(RemoteTestNG.java:77)
Caused by: java.lang.IllegalStateException: Cannot get a STRING value from a NUMERIC cell
at org.apache.poi.xssf.usermodel.XSSFCell.typeMismatch(XSSFCell.java:1022)
at org.apache.poi.xssf.usermodel.XSSFCell.getRichStringCellValue(XSSFCell.java:393)
at org.apache.poi.xssf.usermodel.XSSFCell.getStringCellValue(XSSFCell.java:342)
at progressive.qa.utilities.ExcelReader.testData(ExcelReader.java:55)
at progressive.qa.auto.AutoQuoteTest.getAutoDataExcel(AutoQuoteTest.java:30)
at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
at java.lang.reflect.Method.invoke(Method.java:498)
at org.testng.internal.invokers.MethodInvocationHelper.invokeMethod(MethodInvocationHelper.java:135)
at org.testng.internal.invokers.MethodInvocationHelper.invokeMethod(MethodInvocationHelper.java:80)
at org.testng.internal.invokers.MethodInvocationHelper.invokeMethodNoCheckedException(MethodInvocationHelper.java:49)
... 25 more
]]>
            </full-stacktrace>
          </exception> <!-- java.lang.RuntimeException -->
          <reporter-output>
          </reporter-output>
        </test-method> <!-- autoQuoteTestingWithExcelDataProbider -->
      </class> <!-- progressive.qa.auto.AutoQuoteTest -->
    </test> <!-- smoke -->
  </suite> <!-- SmokeSuite -->
</testng-results>
