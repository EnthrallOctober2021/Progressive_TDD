<?xml version="1.0" encoding="UTF-8"?>
<!-- Generated by org.testng.reporters.JUnitXMLReporter -->
<testsuite hostname="Nas" ignored="2" name="Surefire test" tests="15" failures="0" timestamp="2022-03-04T22:50:55 EST" time="0.807" errors="0">
  <testcase name="@BeforeMethod setUp" time="-1.646452255305E9" classname="progressive.qa.base.BaseClass">
    <failure type="org.testng.TestNGException" message="
Parameter &amp;apos;browser&amp;apos; is required by BeforeMethod on method setUp but has not been marked @Optional or defined
">
      <![CDATA[org.testng.TestNGException: 
Parameter 'browser' is required by BeforeMethod on method setUp but has not been marked @Optional or defined

at java.util.ArrayList.forEach(ArrayList.java:1259)
... Removed 33 stack frames]]>
    </failure>
  </testcase> <!-- @BeforeMethod setUp -->
  <testcase name="@AfterMethod afterEachTest" time="0.0" classname="progressive.qa.base.BaseClass">
    <skipped/>
  </testcase> <!-- @AfterMethod afterEachTest -->
  <testcase name="@BeforeMethod beforeEachTest" time="0.0" classname="progressive.qa.base.BaseClass">
    <skipped/>
  </testcase> <!-- @BeforeMethod beforeEachTest -->
  <testcase name="@BeforeMethod setUp" time="0.0" classname="progressive.qa.base.BaseClass">
    <skipped/>
  </testcase> <!-- @BeforeMethod setUp -->
  <testcase name="@AfterMethod afterEachTest" time="0.0" classname="progressive.qa.base.BaseClass">
    <skipped/>
  </testcase> <!-- @AfterMethod afterEachTest -->
  <testcase name="@BeforeMethod beforeEachTest" time="0.0" classname="progressive.qa.base.BaseClass">
    <skipped/>
  </testcase> <!-- @BeforeMethod beforeEachTest -->
  <testcase name="@BeforeMethod setUp" time="0.0" classname="progressive.qa.base.BaseClass">
    <skipped/>
  </testcase> <!-- @BeforeMethod setUp -->
  <testcase name="@AfterMethod afterEachTest" time="0.0" classname="progressive.qa.base.BaseClass">
    <skipped/>
  </testcase> <!-- @AfterMethod afterEachTest -->
  <testcase name="@BeforeMethod beforeEachTest" time="0.0" classname="progressive.qa.base.BaseClass">
    <skipped/>
  </testcase> <!-- @BeforeMethod beforeEachTest -->
  <testcase name="@BeforeMethod setUp" time="0.0" classname="progressive.qa.base.BaseClass">
    <skipped/>
  </testcase> <!-- @BeforeMethod setUp -->
  <testcase name="@AfterMethod afterEachTest" time="0.0" classname="progressive.qa.base.BaseClass">
    <skipped/>
  </testcase> <!-- @AfterMethod afterEachTest -->
  <testcase name="@BeforeMethod beforeEachTest" time="0.0" classname="progressive.qa.base.BaseClass">
    <skipped/>
  </testcase> <!-- @BeforeMethod beforeEachTest -->
  <testcase name="@BeforeMethod setUp" time="0.0" classname="progressive.qa.base.BaseClass">
    <skipped/>
  </testcase> <!-- @BeforeMethod setUp -->
  <testcase name="@AfterMethod afterEachTest" time="0.0" classname="progressive.qa.base.BaseClass">
    <skipped/>
  </testcase> <!-- @AfterMethod afterEachTest -->
  <testcase name="@BeforeMethod beforeEachTest" time="0.0" classname="progressive.qa.base.BaseClass">
    <skipped/>
  </testcase> <!-- @BeforeMethod beforeEachTest -->
  <testcase name="@BeforeMethod setUp" time="0.0" classname="progressive.qa.base.BaseClass">
    <skipped/>
  </testcase> <!-- @BeforeMethod setUp -->
  <testcase name="@AfterMethod afterEachTest" time="0.0" classname="progressive.qa.base.BaseClass">
    <skipped/>
  </testcase> <!-- @AfterMethod afterEachTest -->
  <testcase name="@BeforeMethod beforeEachTest" time="0.0" classname="progressive.qa.base.BaseClass">
    <skipped/>
  </testcase> <!-- @BeforeMethod beforeEachTest -->
  <testcase name="@BeforeMethod setUp" time="0.0" classname="progressive.qa.base.BaseClass">
    <skipped/>
  </testcase> <!-- @BeforeMethod setUp -->
  <testcase name="@AfterMethod afterEachTest" time="0.0" classname="progressive.qa.base.BaseClass">
    <skipped/>
  </testcase> <!-- @AfterMethod afterEachTest -->
  <testcase name="@BeforeMethod beforeEachTest" time="0.0" classname="progressive.qa.base.BaseClass">
    <skipped/>
  </testcase> <!-- @BeforeMethod beforeEachTest -->
  <testcase name="@BeforeMethod setUp" time="0.0" classname="progressive.qa.base.BaseClass">
    <skipped/>
  </testcase> <!-- @BeforeMethod setUp -->
  <testcase name="@AfterMethod afterEachTest" time="0.0" classname="progressive.qa.base.BaseClass">
    <skipped/>
  </testcase> <!-- @AfterMethod afterEachTest -->
  <testcase name="@BeforeMethod beforeEachTest" time="0.0" classname="progressive.qa.base.BaseClass">
    <skipped/>
  </testcase> <!-- @BeforeMethod beforeEachTest -->
  <testcase name="@BeforeMethod setUp" time="0.0" classname="progressive.qa.base.BaseClass">
    <skipped/>
  </testcase> <!-- @BeforeMethod setUp -->
  <testcase name="@AfterMethod afterEachTest" time="0.0" classname="progressive.qa.base.BaseClass">
    <skipped/>
  </testcase> <!-- @AfterMethod afterEachTest -->
  <testcase name="@BeforeMethod beforeEachTest" time="0.0" classname="progressive.qa.base.BaseClass">
    <skipped/>
  </testcase> <!-- @BeforeMethod beforeEachTest -->
  <testcase name="@BeforeMethod setUp" time="0.0" classname="progressive.qa.base.BaseClass">
    <skipped/>
  </testcase> <!-- @BeforeMethod setUp -->
  <testcase name="@AfterMethod afterEachTest" time="0.0" classname="progressive.qa.base.BaseClass">
    <skipped/>
  </testcase> <!-- @AfterMethod afterEachTest -->
  <testcase name="@BeforeMethod beforeEachTest" time="0.0" classname="progressive.qa.base.BaseClass">
    <skipped/>
  </testcase> <!-- @BeforeMethod beforeEachTest -->
  <testcase name="@BeforeMethod setUp" time="0.0" classname="progressive.qa.base.BaseClass">
    <skipped/>
  </testcase> <!-- @BeforeMethod setUp -->
  <testcase name="@AfterMethod afterEachTest" time="0.0" classname="progressive.qa.base.BaseClass">
    <skipped/>
  </testcase> <!-- @AfterMethod afterEachTest -->
  <testcase name="@BeforeMethod beforeEachTest" time="0.0" classname="progressive.qa.base.BaseClass">
    <skipped/>
  </testcase> <!-- @BeforeMethod beforeEachTest -->
  <testcase name="@BeforeMethod setUp" time="0.0" classname="progressive.qa.base.BaseClass">
    <skipped/>
  </testcase> <!-- @BeforeMethod setUp -->
  <testcase name="@AfterMethod afterEachTest" time="0.0" classname="progressive.qa.base.BaseClass">
    <skipped/>
  </testcase> <!-- @AfterMethod afterEachTest -->
  <testcase name="@BeforeMethod setUp" time="-1.646452255342E9" classname="progressive.qa.base.BaseClass">
    <failure type="org.testng.TestNGException" message="
Parameter &amp;apos;browser&amp;apos; is required by BeforeMethod on method setUp but has not been marked @Optional or defined
">
      <![CDATA[org.testng.TestNGException: 
Parameter 'browser' is required by BeforeMethod on method setUp but has not been marked @Optional or defined

at java.util.ArrayList.forEach(ArrayList.java:1259)
... Removed 33 stack frames]]>
    </failure>
  </testcase> <!-- @BeforeMethod setUp -->
  <testcase name="@AfterMethod afterEachTest" time="0.0" classname="progressive.qa.base.BaseClass">
    <skipped/>
  </testcase> <!-- @AfterMethod afterEachTest -->
  <testcase name="@BeforeMethod beforeEachTest" time="0.0" classname="progressive.qa.base.BaseClass">
    <skipped/>
  </testcase> <!-- @BeforeMethod beforeEachTest -->
  <testcase name="@BeforeMethod setUp" time="0.0" classname="progressive.qa.base.BaseClass">
    <skipped/>
  </testcase> <!-- @BeforeMethod setUp -->
  <testcase name="@AfterMethod afterEachTest" time="0.0" classname="progressive.qa.base.BaseClass">
    <skipped/>
  </testcase> <!-- @AfterMethod afterEachTest -->
  <testcase name="autoQuoteTestingWithExcelDataProbider" time="0.0" classname="progressive.qa.auto.AutoQuoteTest">
    <skipped/>
  </testcase> <!-- autoQuoteTestingWithExcelDataProbider -->
  <testcase name="autoQuoteTestingWithExcelDataProbider" time="0.0" classname="progressive.qa.auto.AutoQuoteTest">
    <skipped/>
  </testcase> <!-- autoQuoteTestingWithExcelDataProbider -->
  <testcase name="autoQuoteTestingWithExcelDataProbider" time="0.0" classname="progressive.qa.auto.AutoQuoteTest">
    <skipped/>
  </testcase> <!-- autoQuoteTestingWithExcelDataProbider -->
  <testcase name="autoQuoteTestingWithExcelDataProbider" time="0.0" classname="progressive.qa.auto.AutoQuoteTest">
    <skipped/>
  </testcase> <!-- autoQuoteTestingWithExcelDataProbider -->
  <testcase name="autoQuoteTestingWithIterator2DataProbider" time="0.0" classname="progressive.qa.auto.AutoQuoteTest">
    <skipped/>
  </testcase> <!-- autoQuoteTestingWithIterator2DataProbider -->
  <testcase name="autoQuoteTestingWithIterator2DataProbider" time="0.0" classname="progressive.qa.auto.AutoQuoteTest">
    <skipped/>
  </testcase> <!-- autoQuoteTestingWithIterator2DataProbider -->
  <testcase name="autoQuoteTestingWithIterator2DataProbider" time="0.0" classname="progressive.qa.auto.AutoQuoteTest">
    <skipped/>
  </testcase> <!-- autoQuoteTestingWithIterator2DataProbider -->
  <testcase name="autoQuoteTestingWithIteratorDataProbider" time="0.0" classname="progressive.qa.auto.AutoQuoteTest">
    <skipped/>
  </testcase> <!-- autoQuoteTestingWithIteratorDataProbider -->
  <testcase name="autoQuoteTestingWithIteratorDataProbider" time="0.0" classname="progressive.qa.auto.AutoQuoteTest">
    <skipped/>
  </testcase> <!-- autoQuoteTestingWithIteratorDataProbider -->
  <testcase name="autoQuoteTestingWithIteratorDataProbider" time="0.0" classname="progressive.qa.auto.AutoQuoteTest">
    <skipped/>
  </testcase> <!-- autoQuoteTestingWithIteratorDataProbider -->
  <testcase name="testMethodAuto1" time="0.0" classname="progressive.qa.auto.AutoQuoteTest">
    <skipped/>
  </testcase> <!-- testMethodAuto1 -->
  <testcase name="autoQuoteTesting" time="0.0" classname="progressive.qa.auto.AutoQuoteTest">
    <skipped/>
  </testcase> <!-- autoQuoteTesting -->
  <testcase name="testMethodAuto" time="0.0" classname="progressive.qa.auto.AutoQuoteTest">
    <skipped/>
  </testcase> <!-- testMethodAuto -->
  <testcase name="homeQuoteTesting" time="0.0" classname="progressive.qa.home.HomeQuoteTest">
    <skipped/>
  </testcase> <!-- homeQuoteTesting -->
  <testcase name="homeTest" time="0.0" classname="progressive.qa.home.HomeQuoteTest">
    <skipped/>
  </testcase> <!-- homeTest -->
  <testcase name="@BeforeSuite initiatinExtentReport" time="0.0" classname="progressive.qa.base.BaseClass">
    <ignored/>
  </testcase> <!-- @BeforeSuite initiatinExtentReport -->
  <testcase name="@AfterSuite endReport" time="0.0" classname="progressive.qa.base.BaseClass">
    <ignored/>
  </testcase> <!-- @AfterSuite endReport -->
</testsuite> <!-- Surefire test -->
